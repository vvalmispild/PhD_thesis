%!PS-Adobe-2.0 EPSF-2.0
%%Title: dEpot_xray_Evg.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Thu Oct 31 21:50:44 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 338
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded true def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 482 50 lineto 482 338 lineto 50 338 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dEpot_xray_Evg.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (vvalmisp)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Oct 31 21:50:44 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 320 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 8640.00 5760.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1568 1280 M
63 0 V
6432 0 R
-63 0 V
stroke
1376 1280 M
[ [(Times-Roman) 320.0 0.0 true true 0 (-0.2)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1568 1963 M
63 0 V
6432 0 R
-63 0 V
stroke
1376 1963 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 0)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1568 2645 M
63 0 V
6432 0 R
-63 0 V
stroke
1376 2645 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 0.2)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1568 3328 M
63 0 V
6432 0 R
-63 0 V
stroke
1376 3328 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 0.4)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1568 4010 M
63 0 V
6432 0 R
-63 0 V
stroke
1376 4010 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 0.6)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1568 4693 M
63 0 V
6432 0 R
-63 0 V
stroke
1376 4693 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 0.8)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1568 5375 M
63 0 V
6432 0 R
-63 0 V
stroke
1376 5375 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 1)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1568 1280 M
0 63 V
0 4032 R
0 -63 V
stroke
1568 960 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 0)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2867 1280 M
0 63 V
0 4032 R
0 -63 V
stroke
2867 960 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4166 1280 M
0 63 V
0 4032 R
0 -63 V
stroke
4166 960 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 2)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5465 1280 M
0 63 V
0 4032 R
0 -63 V
stroke
5465 960 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 3)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6764 1280 M
0 63 V
0 4032 R
0 -63 V
stroke
6764 960 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 4)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
8063 1280 M
0 63 V
0 4032 R
0 -63 V
stroke
8063 960 M
[ [(Times-Roman) 320.0 0.0 true true 0 ( 5)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1568 5375 N
0 -4095 V
6495 0 V
0 4095 V
-6495 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
256 3327 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 320.0 0.0 true true 0 (D)]
[(Times-Roman) 320.0 0.0 true true 0 (E)]
] -106.7 MCshow
grestore
LTb
LCb setrgbcolor
4815 480 M
[ [(Times-Roman) 320.0 0.0 true true 0 (A)]
[(Times-Roman) 256.0 -96.0 true true 0 (x)]
] -74.7 MCshow
LTb
% Begin plot #1
1.000 UP
5.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
3104 5152 M
[ [(Times-Roman) 320.0 0.0 true true 0 (E)]
[(Times-Roman) 256.0 -96.0 true true 0 (pot)]
[(Times-Roman) 320.0 0.0 true true 0 ( u=2)]
] -74.7 MRshow
1.000 UP
5.000 UL
LTb
0.00 0.62 0.45 C 1568 1962 Crs
1828 1962 Crs
2088 1962 Crs
2347 1962 Crs
2607 1961 Crs
2867 1958 Crs
3127 1952 Crs
3387 1942 Crs
3646 1928 Crs
3906 1913 Crs
4166 1904 Crs
4426 1903 Crs
4686 1913 Crs
4945 1929 Crs
5205 1950 Crs
5465 1971 Crs
5725 1990 Crs
5985 2007 Crs
6244 2020 Crs
6504 2030 Crs
6764 2037 Crs
7024 2041 Crs
7284 2043 Crs
7543 2042 Crs
7803 2040 Crs
8063 2036 Crs
3711 5152 Crs
% End plot #1
% Begin plot #2
1.000 UP
5.000 UL
LTb
0.00 0.45 0.70 C LCb setrgbcolor
3104 4832 M
[ [(Times-Roman) 320.0 0.0 true true 0 (E)]
[(Times-Roman) 256.0 -96.0 true true 0 (pot)]
[(Times-Roman) 320.0 0.0 true true 0 ( u=4)]
] -74.7 MRshow
1.000 UP
5.000 UL
LTb
0.00 0.45 0.70 C 1568 1962 Circle
1828 1962 Circle
2088 1962 Circle
2347 1959 Circle
2607 1950 Circle
2867 1932 Circle
3127 1897 Circle
3387 1843 Circle
3646 1784 Circle
3906 1743 Circle
4166 1728 Circle
4426 1737 Circle
4686 1758 Circle
4945 1784 Circle
5205 1811 Circle
5465 1835 Circle
5725 1856 Circle
5985 1874 Circle
6244 1888 Circle
6504 1899 Circle
6764 1908 Circle
7024 1916 Circle
7284 1924 Circle
7543 1933 Circle
7803 1944 Circle
8063 1956 Circle
3711 4832 Circle
% End plot #2
% Begin plot #3
1.000 UP
5.000 UL
LTb
0.90 0.12 0.06 C LCb setrgbcolor
3104 4512 M
[ [(Times-Roman) 320.0 0.0 true true 0 (E)]
[(Times-Roman) 256.0 -96.0 true true 0 (pot)]
[(Times-Roman) 320.0 0.0 true true 0 ( u=6)]
] -74.7 MRshow
1.000 UP
5.000 UL
LTb
0.90 0.12 0.06 C 1568 1962 CircleF
1828 1962 CircleF
2088 1960 CircleF
2347 1954 CircleF
2607 1935 CircleF
2867 1893 CircleF
3127 1813 CircleF
3387 1703 CircleF
3646 1601 CircleF
3906 1535 CircleF
4166 1503 CircleF
4426 1497 CircleF
4686 1507 CircleF
4945 1516 CircleF
5205 1521 CircleF
5465 1522 CircleF
5725 1523 CircleF
5985 1523 CircleF
6244 1524 CircleF
6504 1524 CircleF
6764 1525 CircleF
7024 1527 CircleF
7284 1530 CircleF
7543 1535 CircleF
7803 1542 CircleF
8063 1550 CircleF
3711 4512 CircleF
% End plot #3
% Begin plot #4
1.000 UP
5.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
3104 4192 M
[ [(Times-Roman) 320.0 0.0 true true 0 (E)]
[(Times-Roman) 256.0 -96.0 true true 0 (kin)]
[(Times-Roman) 320.0 0.0 true true 0 ( u=2)]
] -74.7 MRshow
1.000 UP
5.000 UL
LTb
0.00 0.62 0.45 C 3296 4192 M
831 0 V
1568 1963 M
260 0 V
260 0 V
259 4 V
260 9 V
260 23 V
260 46 V
260 88 V
259 146 V
260 217 V
260 283 V
260 328 V
260 345 V
259 337 V
260 305 V
260 264 V
260 220 V
260 178 V
259 137 V
260 100 V
260 66 V
260 38 V
260 12 V
259 -8 V
260 -23 V
260 -32 V
1568 1963 Crs
1828 1963 Crs
2088 1963 Crs
2347 1967 Crs
2607 1976 Crs
2867 1999 Crs
3127 2045 Crs
3387 2133 Crs
3646 2279 Crs
3906 2496 Crs
4166 2779 Crs
4426 3107 Crs
4686 3452 Crs
4945 3789 Crs
5205 4094 Crs
5465 4358 Crs
5725 4578 Crs
5985 4756 Crs
6244 4893 Crs
6504 4993 Crs
6764 5059 Crs
7024 5097 Crs
7284 5109 Crs
7543 5101 Crs
7803 5078 Crs
8063 5046 Crs
3711 4192 Crs
% End plot #4
% Begin plot #5
1.000 UP
5.000 UL
LTb
0.00 0.45 0.70 C LCb setrgbcolor
3104 3872 M
[ [(Times-Roman) 320.0 0.0 true true 0 (E)]
[(Times-Roman) 256.0 -96.0 true true 0 (kin)]
[(Times-Roman) 320.0 0.0 true true 0 ( u=4)]
] -74.7 MRshow
1.000 UP
5.000 UL
LTb
0.00 0.45 0.70 C 3296 3872 M
831 0 V
1568 1963 M
260 0 V
260 2 V
259 8 V
260 21 V
260 49 V
260 96 V
260 155 V
259 204 V
260 221 V
260 209 V
260 184 V
260 157 V
259 131 V
260 109 V
260 88 V
260 70 V
260 55 V
259 42 V
260 33 V
260 26 V
260 23 V
260 22 V
259 25 V
260 29 V
260 34 V
1568 1963 Circle
1828 1963 Circle
2088 1965 Circle
2347 1973 Circle
2607 1994 Circle
2867 2043 Circle
3127 2139 Circle
3387 2294 Circle
3646 2498 Circle
3906 2719 Circle
4166 2928 Circle
4426 3112 Circle
4686 3269 Circle
4945 3400 Circle
5205 3509 Circle
5465 3597 Circle
5725 3667 Circle
5985 3722 Circle
6244 3764 Circle
6504 3797 Circle
6764 3823 Circle
7024 3846 Circle
7284 3868 Circle
7543 3893 Circle
7803 3922 Circle
8063 3956 Circle
3711 3872 Circle
% End plot #5
% Begin plot #6
1.000 UP
5.000 UL
LTb
0.90 0.12 0.06 C LCb setrgbcolor
3104 3552 M
[ [(Times-Roman) 320.0 0.0 true true 0 (E)]
[(Times-Roman) 256.0 -96.0 true true 0 (kin)]
[(Times-Roman) 320.0 0.0 true true 0 ( u=6)]
] -74.7 MRshow
1.000 UP
5.000 UL
LTb
0.90 0.12 0.06 C 3296 3552 M
831 0 V
1568 1963 M
260 0 V
260 3 V
259 11 V
260 32 V
260 74 V
260 134 V
260 184 V
259 178 V
260 138 V
260 107 V
260 85 V
260 61 V
259 32 V
260 12 V
260 4 V
260 2 V
260 1 V
259 1 V
260 2 V
260 3 V
260 5 V
260 6 V
259 10 V
260 12 V
260 15 V
1568 1963 CircleF
1828 1963 CircleF
2088 1966 CircleF
2347 1977 CircleF
2607 2009 CircleF
2867 2083 CircleF
3127 2217 CircleF
3387 2401 CircleF
3646 2579 CircleF
3906 2717 CircleF
4166 2824 CircleF
4426 2909 CircleF
4686 2970 CircleF
4945 3002 CircleF
5205 3014 CircleF
5465 3018 CircleF
5725 3020 CircleF
5985 3021 CircleF
6244 3022 CircleF
6504 3024 CircleF
6764 3027 CircleF
7024 3032 CircleF
7284 3038 CircleF
7543 3048 CircleF
7803 3060 CircleF
8063 3075 CircleF
3711 3552 CircleF
% End plot #6
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1568 5375 N
0 -4095 V
6495 0 V
0 4095 V
-6495 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
